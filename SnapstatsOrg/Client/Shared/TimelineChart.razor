@using Blazorise.Charts

<LineChart @ref="lineChart" TItem="TimelineChartData" OptionsObject="options" />

@code {
    LineChart<TimelineChartData>? lineChart;
    List<string> lineNames = new();
    List<LineChartDataset<TimelineChartData>> chartData = new();

    Timeline[] _data = Array.Empty<Timeline>();

    [Parameter]
    public Timeline[] data {
        get => _data;
        set
        {
            if (_data == value)
            {
                return;
            }
            _data = value;
            lineNames = _data.Select(d => d._id ?? "").ToList();
            foreach (var line in _data)
            {
                var thisData = line.counts.Select(s => new TimelineChartData()
                {
                    X = s.date,
                    Y = s.count,
                });
                var dataset = new LineChartDataset<TimelineChartData>()
                {
                    Data = thisData.ToList(),
                    Label = line._id,
                };
                chartData.Add(dataset);
            }
            if (chartData.Count != 0)
            {
                UpdateChart();
            }
        }
    }

    public async Task UpdateChart()
    {
        var i = 0;
        for (; i < 10; i++)
        {
            if (lineChart is not null)
            {
                break;
            }
            await Task.Delay(100);
        }
        if (lineChart is not null)
        {
            await lineChart.AddDatasetsAndUpdate(chartData.ToArray());
        }
        else
        {
            throw new Exception("LineChart didn't become available in time.");
        }
    }

    private string _title = "Timeline";

    public object options { get; set; } = new
    {
        Scales = new
        {
            XAxes = new object[]
            {
                new
                {
                    Type = "time",
                    Distribution = "linear",
                    Time = new
                    {
                        Unit = "day",
                    },
                },
            },
            YAxes = new object[]
            {
                new
                {
                    ScaleLabel = new
                    {
                        Display = true,
                        LabelString = "Number of snaps"
                    },
                    Ticks = new
                    {
                        BeginAtZero = true,
                    },
                },
            },
        },
        Animation = new
        {
            Duration = 0,
        },
        ResponsiveAnimationDuration = 0,
        Legend = new
        {
            Display = false,
        },
    };

    [Parameter]
    public string Title {
        get => _title;
        set
        {
            _title = value ?? "Timeline";
        }
    }
}
