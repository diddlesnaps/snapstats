@page "/developers"
@inject IGraphQLClient Client

<Title>Snap Store developers statistics | Snapstats.org</Title>
<Meta name="description" content="Statistics about Snap Package developers within the Snap Store for Linux" />

@* Facebook *@
<Meta property="og:type" content="website" />
<Meta property="og:title" content="Snap Store developers statistics | Snapstats.org" />
<Meta property="og:description" content="Statistics about Snap Package developers within the Snap Store for Linux" />
<Meta property="og:image" content="/favicons/android-icon-512x512.png" />
<Meta property="og:image:secure_url" content="/favicons/android-icon-512x512.png" />
<Meta property="og:image:width" content="512" />
<Meta property="og:image:height" content="512" />
<Meta property="og:image:alt" content="Icon of Snapstats.org" />

@* Twitter *@
<Meta name="twitter:card" content="summary" />
<Meta name="twitter:creator" content="@("@diddledani")" />
<Meta name="twitter:title" content="Snap Store developers statistics | Snapstats.org" />
<Meta name="twitter:description" content="Statistics about Snap Package developers within the Snap Store for Linux" />
<Meta name="twitter:image" content="/favicons/android-icon-512x512.png" />

<h1>Developers</h1>

@if (developerCountsByDate is not null && developerCountsByDate.Length > 0)
{
	<p>There are <strong>@developerCountsByDate.First().total</strong> developers who have published at least one snap.</p>
}
else
{
	<p>There are an unknown number of developers who have published at least one snap.</p>
}

<p>
	Developers with published Snaps have each published an average (<a href="https://en.wikipedia.org/wiki/Arithmetic_mean">mean</a>) of <strong>@(developerCountsByDate?.Length > 0 ? developerCountsByDate.First().mean : 0)</strong> Snaps.
	The most common number of Snaps published per developer (<a href="https://en.wikipedia.org/wiki/Mode_(statistics)">mode</a>) is <strong>@(developerCountsByDate?.Length > 0 ? developerCountsByDate.First().mode : 0)</strong>.
</p>

<DonateButton/>

@if (verifiedDevelopers is not null && verifiedDevelopers.Length > 0)
{
	<h2>Verified Developers</h2>
	<p>Below is a list of the <strong>@verifiedDevelopers.Length</strong> known <span class='verified'>Verified</span> developers. Between them they have published <strong>@verifiedSnapsCount</strong> Snaps:</p>
	<ul>
		@foreach (var developer in verifiedDevelopers)
        {
			<li>@developer</li>
		}
	</ul>
}

@code {
	private const string Query = @"
		query {
			developerCountsByDate{
				date
				total
				mean
				mode
				median
			}
			findSnapsCount(developer_validation:VERIFIED)
			verifiedDevelopers
		}
	";

	protected DeveloperCount[] developerCountsByDate = Array.Empty<DeveloperCount>();
	protected string[] verifiedDevelopers = Array.Empty<string>();
	protected uint verifiedSnapsCount = 0;

	protected override async Task OnInitializedAsync()
    {
        GraphQLRequest request = new GraphQLRequest
        {
            Query = Query,
        };
        var response = await Client.SendQueryAsync<DevelopersQuery>(request).ConfigureAwait(false);
		developerCountsByDate = response.Data.developerCountsByDate ?? Array.Empty<DeveloperCount>();
		verifiedDevelopers = response.Data.verifiedDevelopers ?? Array.Empty<string>();
		verifiedSnapsCount = response.Data.findSnapsCount ?? 0;
    }
}
